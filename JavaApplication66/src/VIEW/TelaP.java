package VIEW;

import DAO.Servidor;
import MODEL.Mensagem;
import MODEL.Cliente;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.SwingWorker;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author 0068952
 */
public class TelaP extends javax.swing.JPanel implements PainelSwingWorker {

    /**
     * Creates new form TelaP
     */
    private String Nome;
    private int controle;
    private SwingWorker atualizadorPontos;

    public TelaP(String nome) throws Exception {
        initComponents();
        minhasconfiguracoes();

        this.Nome = nome;

    }
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        try {
            BufferedImage imagem = ImageIO.read(getClass().getResource("/RESOUCE/telap.PNG"));//por o nome da tela que vai estar em resouce

            g.drawImage(imagem, 0, 0, this);

        } catch (IOException ex) {
            System.err.println("arquivo n√£o existe no resource");
        }
    }

    private DefaultListModel<String> dadosListaModel1;
    private DefaultListModel<Mensagem> dadosListaModel2;

    private ServerSocket soquete_servidor;
    private ArrayList<Mensagem> mensagens;
    private ArrayList<String> listaantiga;

    private ObjectOutputStream saida;
    private ObjectInputStream entrada;

    private ArrayList<Mensagem> listachatglobal;

    private static ArrayList<String> clientesConectados = new ArrayList<>();
    private static ArrayList<String> clientesConectadosT = new ArrayList<>();
    private static ArrayList<String> mensagemglobal = new ArrayList<>();
    private static Cliente cliente = null;

    public void enviar_mensagem(Object mensagem) throws Exception {
        this.saida.writeObject(mensagem);

    }

    public Object receber_mensagem() throws Exception {
        return this.entrada.readObject();

    }

    public void minhasconfiguracoes() throws Exception {
        dadosListaModel1 = new DefaultListModel<>();

        this.jList1.setModel(this.dadosListaModel1);

    }

    public void telabk() {

        atualizadorPontos = new SwingWorker() {

            @Override
            protected Object doInBackground() throws Exception {

                while (true) {

                    

                    cliente = new Cliente(Servidor.RetornaIp(), 15500);

                    Mensagem m = new Mensagem();
                    m.setNome("a");
                    m.setCodigo(-4);

                    TelaP.cliente.enviar_mensagem(m);

                    clientesConectadosT = (ArrayList<String>) cliente.receber_mensagem();
                    
                    dadosListaModel1 = new DefaultListModel<>();
                    
                    jList1.setModel(dadosListaModel1);
                    dadosListaModel1.addAll(clientesConectadosT);
                    

                    Thread.sleep(1000);

                }

            }

        };

        atualizadorPontos.execute();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Abrir chat privado");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Abrir chat global global");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jButton2)
                        .addGap(30, 30, 30)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.finalizaSW();
        Frame.trocaPainel("Tela ChatGlobal", new TelaMensagemGlobal(Nome));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.finalizaSW();
        Frame.trocaPainel("Tela ChatPrivado", new TelaMensagemEspecifica(Nome));
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void iniciaSW() {
        telabk();
    }

    @Override
    public void finalizaSW() {
        atualizadorPontos.cancel(true);
    }
}
